let mapleader = ','
let g:mapleader = ','
if filereadable(expand("~/.vimrc.plug"))
    source ~/.vimrc.plug
endif

let g:airline_section_z = airline#section#create(['windowswap', 'obsession', 'LN:%p%%', ' = %l', '/%L', ' CN:%v'])

" tab
set fdm=marker
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set tw=100
set autoindent
set list
set listchars=tab:→\ ,eol:↵,trail:·,extends:↷,precedes:↶
" inoremap { {}<Esc>i<CR><Esc>koi<Esc>j<C-S-v><S-%>=j<S-$>xa

" encoding
set termencoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
set fileencoding=cp936
" set encoding=utf-8
set noswapfile

" search
set hlsearch
set incsearch
set ignorecase
set smartcase
nnoremap / /\v
vnoremap / /\v
noremap <silent><leader>/ :nohls<CR>

" del all space
noremap <silent><leader><space> :% s/\s\+$//g<CR>

" colorschme
set background=dark
set t_Co=256

" cmd line
set cursorcolumn
hi CursorColumn cterm=none ctermbg=black ctermfg=none
set cursorline
hi CursorLine cterm=none ctermbg=black ctermfg=none
hi CursorLineNr cterm=none ctermbg=black ctermfg=none
set cc=100
hi ColorColumn cterm=none ctermbg=black ctermfg=none
set ruler
set showcmd
set statusline=%<%f\ %h%m%r%=%k[%{(&fenc==\"\")?&enc:&fenc}%{(&bomb?\",BOM\":\"\")}]\ %-14.(%l,%c%V%)\ %P
set laststatus=2
" hi StatusLine cterm=none ctermbg=black ctermfg=cyan
" hi StatusLineNC cterm=none ctermbg=black ctermfg=cyan
" hi VertSplit cterm=none ctermbg=black ctermfg=cyan
hi VertSplit cterm=none ctermbg=236 ctermfg=236

" hotkey
imap <c-k> <Up>
imap <c-j> <Down>
imap <c-h> <Left>
imap <c-l> <Right>
vnoremap < <gv
vnoremap > >gv
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>
nnoremap <leader>q :q<CR>
nnoremap <leader>w :w<CR>
map <c-k> <c-w>k
map <c-j> <c-w>j
map <c-h> <c-w>h
map <c-l> <c-w>l
map wj :resize -3<CR>
map wk :resize +3<CR>
map wl :vertical resize -5<CR>
map wh :vertical resize +5<CR>

" other set
set number
filetype plugin on
set mouse-=a
set autoread
set backspace=eol,start,indent
syntax on

nmap <silent><unique> <Leader>tag :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR><CR>
set tags=./.tags;,.tags

" 删除行尾空格
function! <SID>StripTrailingWhitespaces()
    " save last search & cursor position
    let _s=@/
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    let @/=_s
    call cursor(l, c)
endfunction
" 在写入文件之前执行删除行尾空格
autocmd BufWritePre * call <SID>StripTrailingWhitespaces()

"Google C++ Style
ab usi using namespace
autocmd FileType cpp set shiftwidth=2 " 缩进2格
set cino=N-s                          " namespace缩进问题
function! GoogleCppIndent()
    let l:cline_num = line('.')
    let l:orig_indent = cindent(l:cline_num)
    if l:orig_indent == 0 | return 0 | endif
    let l:pline_num = prevnonblank(l:cline_num - 1)
    let l:pline = getline(l:pline_num)
    if l:pline =~# '^\s*template' | return l:pline_indent | endif
    if l:orig_indent != &shiftwidth | return l:orig_indent | endif
    let l:in_comment = 0
    let l:pline_num = prevnonblank(l:cline_num - 1)
    while l:pline_num > -1
        let l:pline = getline(l:pline_num)
        let l:pline_indent = indent(l:pline_num)
        if l:in_comment == 0 && l:pline =~ '^.\{-}\(/\*.\{-}\)\@<!\*/'
            let l:in_comment = 1
        elseif l:in_comment == 1
            if l:pline =~ '/\*\(.\{-}\*/\)\@!'
                let l:in_comment = 0
            endif
        elseif l:pline_indent == 0
            if l:pline !~# '\(#define\)\|\(^\s*//\)\|\(^\s*{\)'
                if l:pline =~# '^\s*namespace.*'
                    return 0
                else
                    return l:orig_indent
                endif
            elseif l:pline =~# '\\$'
                return l:orig_indent
            endif
        else
            return l:orig_indent
        endif
        let l:pline_num = prevnonblank(l:pline_num - 1)
    endwhile
    return l:orig_indent
endfunction
set cinoptions=h1,l1,g1,t0,i4,+4,(0,w1,W4)
autocmd BufEnter *.{cc,cxx,cpp,h,hh,hpp,hxx} setlocal indentexpr=GoogleCppIndent()
let b:undo_indent = "setl sw< ts< sts< et< tw< wrap< cin< cino< inde<"

" 强制保存退出时使用clang-format格式化代码
autocmd! BufWritePost *.c,*.cc,*.cpp,*.cxx,*.h,*.hpp,*.inl,*.proto :silent ! clang-format -style=file -i %
